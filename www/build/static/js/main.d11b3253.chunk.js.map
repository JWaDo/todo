{"version":3,"sources":["img/logoS4.png","routes/index.js","routes/quiSommeNous.js","pages/QuiSommesNousPage.js","routes/transformation.js","pages/TransformationPage.js","routes/conseils.js","pages/ConseilsPage.js","routes/marketing.js","pages/MarketingPage.js","routes/budget.js","pages/BudgetPage.js","routes/landing.js","pages/LandingPage.js","components/Global/NavBar/NavBar.js","configs/history.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["module","exports","routes","path","name","component","Grid","container","alignItems","justify","item","align","xs","md","spacing","Typography","variant","exact","reduce","accumulator","route","getRoutePathByName","routeName","find","useStyles","makeStyles","title","textAlign","margin","hr","marginBottom","img","width","marginRight","titleSM","color","titleLG","NavBar","useState","open","setOpen","selectedItem","setSelectedItem","classes","history","useHistory","handleChange","event","newValue","toggleDrawer","status","AppBar","position","Toolbar","Hidden","mdUp","IconButton","edge","aria-label","className","onClick","mdDown","src","logo","alt","to","Drawer","onClose","Box","p","direction","Divider","Tabs","value","onChange","orientation","map","link","Tab","label","smDown","push","createBrowserHistory","App","generateRoutes","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","purple","overrides","MuiDrawer","paper","padding","MuiTypography","h6","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d11b3253.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoS4.9d61a120.png\";","import React from 'react';\nimport budget from './budget';\nimport conseils from './conseils';\nimport marketing from './marketing';\nimport quiSommesNous from './quiSommeNous';\nimport transformation from './transformation';\nimport landing from './landing';\nimport { Route } from 'react-router-dom';\n\n\nconst combineRoutes = (routes) => {\n    return routes.reduce((accumulator, route) => [...accumulator, ...route]);\n};\n\nconst routes = combineRoutes([\n    quiSommesNous,\n    transformation,\n    conseils,\n    marketing,\n    budget,\n    landing,\n]);\n\nexport const getRoutePathByName = (routeName) => {\n    const route = routes.find((route) => route.name === routeName)\n    return route.path;\n}\n\nexport const generateRoutes = (routes) => {\n    return routes.map(route => <Route {...route} /> );\n}\n\nexport default routes;","import QuiSommesNousPage from '../pages/QuiSommesNousPage';\n\nexport default [\n    {\n        path: '/qui-sommes-nous',\n        name: \"Qui sommes nous ?\",\n        component: QuiSommesNousPage,\n        exact: true,\n    }\n]\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst QuiSommesNousPage = () => {\n    return (\n        <Grid container alignItems=\"center\"\n        justify=\"center\">\n            <Grid item align=\"center\" xs={12} md={4} spacing={3}>\n                <Typography>Hello my gorgeous friends</Typography>         \n            </Grid>\n            <Grid item xs={12} md={4} spacing={3}>\n                <Typography align=\"center\"variant=\"p\">Hello my gorgeous friends</Typography>         \n            </Grid>\n        </Grid>\n    );\n}\n \nexport default QuiSommesNousPage;","import TransformationPage from '../pages/TransformationPage';\n\nexport default [\n    {\n        path: '/transformation-digitale',\n        name: \"Transformation digitale\",\n        component: TransformationPage,\n        exact: true,\n    }\n]\n","import React from 'react'\n\nconst TransformationPage = () => {\n    return (\n        <h1>TransformationPage</h1>\n    );\n}\n \nexport default TransformationPage;","import ConseilsPage from '../pages/ConseilsPage';\n\nexport default [\n    {\n        path: '/conseils',\n        name: 'Conseils',\n        component: ConseilsPage,\n        exact: true,\n    }\n]\n","import React from 'react';\n\nconst ConseilsPage = () => {\n    return (\n        <h1>ConseilsPage</h1>\n    );\n}\n \nexport default ConseilsPage;","import MarketingPage from '../pages/MarketingPage';\n\nexport default [\n    {\n        path: '/social-marketing',\n        name: \"Social Marketing\",\n        component: MarketingPage,\n        exact: true,\n    }\n]\n","import React from 'react';\n\nconst MarketingPage = () => {\n    return (\n        <h1>MarketingPage</h1>\n    );\n}\n \nexport default MarketingPage;","import BudgetPage from '../pages/BudgetPage';\n\nexport default [\n    {\n        path: '/budget',\n        name: 'Budget',\n        component: BudgetPage,\n        exact: true,\n    }\n]\n","import React from 'react';\n\nconst BudgetPage = () => {\n    return (\n        <h1>BudgetPage</h1>\n    );\n}\n \nexport default BudgetPage;","import LandingPage from '../pages/LandingPage';\n\nexport default [\n    {\n        path: '/',\n        name: 'landing',\n        component: LandingPage,\n        exact: true,\n    }\n]\n","import React from 'react';\n\nconst LandingPage = () => {\n    return (\n        <h1>LandingPage</h1>\n    );\n}\n \nexport default LandingPage;","import React, { useState } from 'react'\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport routes, { getRoutePathByName } from '../../../routes/index';\nimport logo from \"../../../img/logoS4.png\";\n\nimport './style.css';\n\nconst useStyles = makeStyles({\n    title: {\n        textAlign: \"center\",\n        margin: \"1rem\",\n    },\n    hr: {\n        marginBottom: \"1rem\",\n    },\n    img: {\n        width: \"30px\",\n        marginRight: \"10px\",\n    },\n    titleSM:{\n     color: \"#5E17EB\"   \n    },\n    titleLG:{\n     color: \"#FFFFFF\"   \n    }\n});\n\n\nconst NavBar = () => {\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(0);\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleChange = (event, newValue) => {\n        setSelectedItem(newValue);\n    };\n    \n    const toggleDrawer = (status) => {\n        setOpen(status);\n    };\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Hidden mdUp>   \n                        <IconButton \n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            className=\"iconMenu\"\n                            onClick={() => toggleDrawer(true)} >\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n\n                    <Hidden mdDown>\n                        <img src={logo} className={classes.img} alt=\"\"/>\n                        <Link to={getRoutePathByName(\"landing\")}>\n                            <Typography variant=\"h6\" className={classes.titleLG}>Skilled 4</Typography>\n                        </Link>\n                    </Hidden> \n\n                    <Hidden mdUp>   \n                        <Drawer \n                            open={open}\n                            onClose={() => toggleDrawer(false)}\n                        >\n                            <Box p={2}>\n                                <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                >\n                                    <img src={logo} className={classes.img} alt=\"\"/>\n                                    <Typography variant=\"h6\" className={classes.titleSM}>Skilled 4</Typography>\n                                </Grid>\n                            </Box>\n                            <Divider variant=\"middle\" className={classes.hr}/>\n\n                            <Tabs \n                                value={selectedItem} \n                                onChange={handleChange}\n                                orientation=\"vertical\"\n                            >\n                                {routes && routes.map((link) => (\n                                    <Tab label={link.name} onClick={() => toggleDrawer(false)}/>\n                                ))}\n                            </Tabs>\n                        </Drawer>\n                    </Hidden>\n\n\n                    <Hidden smDown>\n                        <div className=\"sideLinks\">\n                        <Tabs value={selectedItem} onChange={handleChange}>\n                            { routes && routes.map((link) => (\n                                <Tab label={link.name}/>\n                            ))}\n                        </Tabs>\n                        </div>\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            { history.push(getRoutePathByName(routes[selectedItem].name))}\n        </>\n    );\n}\n \nexport default NavBar;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport NavBar from './components/Global/NavBar/NavBar';\n\nimport history from './configs/history';\nimport routes from './routes/index';\nimport { generateRoutes } from './routes/index';\n\nimport './index.css'\n\nfunction App() {\n\n  return (\n    <div className=\"main\">\n      <Router history={history}>\n        <NavBar />\n        \n        <Switch>\n          \n          {/* Routes */}\n          {generateRoutes(routes)}\n          \n          {/* Not Found */}\n          {/* <Route exact path={\"/404.html\"} component={NotFound} />\n          <Route render={() => <Redirect to={\"404.html\"} />} /> */}\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: \"#5E17EB\"},\n        secondary: purple,\n    },\n    overrides: {\n        MuiDrawer: {\n            paper: {\n                padding: \"1rem\",\n            }\n        },\n        MuiTypography: {\n            h6: {\n                color: \"#FFFFFF\"\n            }\n        }\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}