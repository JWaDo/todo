{"ast":null,"code":"var _jsxFileName = \"/Users/charlesvanhamme/Dev/spotline/src/components/Global/NavBar/NavBar.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport routes, { getRoutePathByName } from '../../../routes/index';\nimport logo from \"../../../img/logoS4.png\";\nimport './style.css';\nconst useStyles = makeStyles({\n  title: {\n    textAlign: \"center\",\n    margin: \"1rem\"\n  },\n  hr: {\n    marginBottom: \"1rem\"\n  },\n  img: {\n    width: \"30px\",\n    height: \"100%\",\n    marginRight: \"10px\"\n  }\n});\n\nconst NavBar = () => {\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(0);\n  const classes = useStyles();\n  let history = useHistory();\n\n  const handleChange = (event, newValue) => {\n    setSelectedItem(newValue);\n  };\n\n  const toggleDrawer = status => {\n    setOpen(status);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    className: \"iconMenu\",\n    onClick: () => toggleDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    open: open,\n    onClose: () => toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Skilled 4\"), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"middle\",\n    className: classes.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Tabs, {\n    value: selectedItem,\n    onChange: handleChange,\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, routes && routes.map(link => /*#__PURE__*/React.createElement(Tab, {\n    label: link.name,\n    onClick: () => toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: classes.img,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Skilled 4\")), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sideLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: selectedItem,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, routes && routes.map(link => /*#__PURE__*/React.createElement(Tab, {\n    label: link.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }))))))), history.push(getRoutePathByName(routes[selectedItem].name)));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/charlesvanhamme/Dev/spotline/src/components/Global/NavBar/NavBar.js"],"names":["React","useState","useHistory","AppBar","Typography","IconButton","Toolbar","Drawer","Divider","Hidden","Tabs","Tab","MenuIcon","makeStyles","routes","getRoutePathByName","logo","useStyles","title","textAlign","margin","hr","marginBottom","img","width","height","marginRight","NavBar","open","setOpen","selectedItem","setSelectedItem","classes","history","handleChange","event","newValue","toggleDrawer","status","map","link","name","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,IAAiBC,kBAAjB,QAA2C,uBAA3C;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,OAAO,aAAP;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADkB;AAKzBC,EAAAA,EAAE,EAAE;AACAC,IAAAA,YAAY,EAAE;AADd,GALqB;AAQzBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,KAAK,EAAE,MADN;AAEDC,IAAAA,MAAM,EAAE,MAFP;AAGDC,IAAAA,WAAW,EAAE;AAHZ;AARoB,CAAD,CAA5B;;AAgBA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM+B,OAAO,GAAGf,SAAS,EAAzB;AACA,MAAIgB,OAAO,GAAG/B,UAAU,EAAxB;;AAEA,QAAMgC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCL,IAAAA,eAAe,CAACK,QAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7BT,IAAAA,OAAO,CAACS,MAAD,CAAP;AACH,GAFD;;AAIA,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,kBAAW,MAHf;AAII,IAAA,SAAS,EAAC,UAJd;AAKI,IAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADJ,eAaI,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAET,IADV;AAEI,IAAA,OAAO,EAAE,MAAMS,YAAY,CAAC,KAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEL,OAAO,CAACd,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAKI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEc,OAAO,CAACX,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAES,YADX;AAEI,IAAA,QAAQ,EAAEI,YAFd;AAGI,IAAA,WAAW,EAAC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKpB,MAAM,IAAIA,MAAM,CAACyB,GAAP,CAAYC,IAAD,iBAClB,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEA,IAAI,CAACC,IAAjB;AAAuB,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CALf,CAPJ,CADJ,eAkBI;AAAK,IAAA,GAAG,EAAErB,IAAV;AAAgB,IAAA,SAAS,EAAEgB,OAAO,CAACT,GAAnC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAmBA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBA,CAbJ,eAoCI,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,YAAb;AAA2B,IAAA,QAAQ,EAAEI,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMpB,MAAM,IAAIA,MAAM,CAACyB,GAAP,CAAYC,IAAD,iBACnB,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEA,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,CADhB,CADA,CADJ,CApCJ,CADJ,CADJ,EAiDMR,OAAO,CAACS,IAAR,CAAa3B,kBAAkB,CAACD,MAAM,CAACgB,YAAD,CAAN,CAAqBW,IAAtB,CAA/B,CAjDN,CADJ;AAqDH,CAnED;;AAqEA,eAAed,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport routes, { getRoutePathByName } from '../../../routes/index';\nimport logo from \"../../../img/logoS4.png\";\n\nimport './style.css';\n\nconst useStyles = makeStyles({\n    title: {\n        textAlign: \"center\",\n        margin: \"1rem\",\n    },\n    hr: {\n        marginBottom: \"1rem\",\n    },\n    img: {\n        width: \"30px\",\n        height: \"100%\",\n        marginRight: \"10px\",\n    }\n});\n\n\nconst NavBar = () => {\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(0);\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleChange = (event, newValue) => {\n        setSelectedItem(newValue);\n    };\n    \n    const toggleDrawer = (status) => {\n        setOpen(status);\n    };\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Hidden mdUp>   \n                        <IconButton \n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            className=\"iconMenu\"\n                            onClick={() => toggleDrawer(true)} >\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                   \n\n                    <Hidden mdUp>   \n                        <Drawer \n                            open={open}\n                            onClose={() => toggleDrawer(false)}\n                        >\n                            <Typography variant=\"h6\" className={classes.title}>Skilled 4</Typography>\n                            <Divider variant=\"middle\" className={classes.hr}/>\n\n                            <Tabs \n                                value={selectedItem} \n                                onChange={handleChange}\n                                orientation=\"vertical\"\n                            >\n                                {routes && routes.map((link) => (\n                                    <Tab label={link.name} onClick={() => toggleDrawer(false)}/>\n                                ))}\n                            </Tabs>\n                        </Drawer>\n                        <img src={logo} className={classes.img} alt=\"\"/>\n                    <Typography variant=\"h6\">Skilled 4</Typography>\n                    </Hidden>\n\n\n                    <Hidden smDown>\n                        <div className=\"sideLinks\">\n                        <Tabs value={selectedItem} onChange={handleChange}>\n                            { routes && routes.map((link) => (\n                                <Tab label={link.name}/>\n                            ))}\n                        </Tabs>\n                        </div>\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            { history.push(getRoutePathByName(routes[selectedItem].name))}\n        </>\n    );\n}\n \nexport default NavBar;"]},"metadata":{},"sourceType":"module"}