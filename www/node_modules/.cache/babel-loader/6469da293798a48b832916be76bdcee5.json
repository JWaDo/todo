{"ast":null,"code":"import _slicedToArray from\"/Users/charlesvanhamme/Dev/spotline/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory,Link}from\"react-router-dom\";import AppBar from'@material-ui/core/AppBar';import Typography from'@material-ui/core/Typography';import IconButton from'@material-ui/core/IconButton';import Toolbar from'@material-ui/core/Toolbar';import Drawer from'@material-ui/core/Drawer';import Divider from'@material-ui/core/Divider';import Hidden from'@material-ui/core/Hidden';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Grid from'@material-ui/core/Grid';import MenuIcon from'@material-ui/icons/Menu';import{makeStyles}from'@material-ui/core/styles';import routes,{getRoutePathByName}from'../../../routes/index';import logo from\"../../../img/logoS4.png\";import'./style.css';var useStyles=makeStyles({title:{textAlign:\"center\",margin:\"1rem\"},hr:{marginBottom:\"1rem\"},img:{width:\"30px\",marginRight:\"10px\"}});var NavBar=function NavBar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedItem=_useState4[0],setSelectedItem=_useState4[1];var classes=useStyles();var history=useHistory();var handleChange=function handleChange(event,newValue){setSelectedItem(newValue);};var toggleDrawer=function toggleDrawer(status){setOpen(status);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBar,{position:\"static\"},/*#__PURE__*/React.createElement(Toolbar,null,/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",color:\"inherit\",\"aria-label\":\"menu\",className:\"iconMenu\",onClick:function onClick(){return toggleDrawer(true);}},/*#__PURE__*/React.createElement(MenuIcon,null))),/*#__PURE__*/React.createElement(Hidden,{mdDown:true},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:classes.img,alt:\"\"}),/*#__PURE__*/React.createElement(Link,{to:getRoutePathByName(\"landing\")},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},\"Skilled 4\"))),/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(Drawer,{open:open,onClose:function onClose(){return toggleDrawer(false);}},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:classes.img,alt:\"\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",className:classes.title},\"Skilled 4\")),/*#__PURE__*/React.createElement(Divider,{variant:\"middle\",className:classes.hr}),/*#__PURE__*/React.createElement(Tabs,{value:selectedItem,onChange:handleChange,orientation:\"vertical\"},routes&&routes.map(function(link){return/*#__PURE__*/React.createElement(Tab,{label:link.name,onClick:function onClick(){return toggleDrawer(false);}});})))),/*#__PURE__*/React.createElement(Hidden,{smDown:true},/*#__PURE__*/React.createElement(\"div\",{className:\"sideLinks\"},/*#__PURE__*/React.createElement(Tabs,{value:selectedItem,onChange:handleChange},routes&&routes.map(function(link){return/*#__PURE__*/React.createElement(Tab,{label:link.name});})))))),history.push(getRoutePathByName(routes[selectedItem].name)));};export default NavBar;","map":{"version":3,"sources":["/Users/charlesvanhamme/Dev/spotline/www/src/components/Global/NavBar/NavBar.js"],"names":["React","useState","useHistory","Link","AppBar","Typography","IconButton","Toolbar","Drawer","Divider","Hidden","Tabs","Tab","Grid","MenuIcon","makeStyles","routes","getRoutePathByName","logo","useStyles","title","textAlign","margin","hr","marginBottom","img","width","marginRight","NavBar","open","setOpen","selectedItem","setSelectedItem","classes","history","handleChange","event","newValue","toggleDrawer","status","map","link","name","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport routes, { getRoutePathByName } from '../../../routes/index';\nimport logo from \"../../../img/logoS4.png\";\n\nimport './style.css';\n\nconst useStyles = makeStyles({\n    title: {\n        textAlign: \"center\",\n        margin: \"1rem\",\n    },\n    hr: {\n        marginBottom: \"1rem\",\n    },\n    img: {\n        width: \"30px\",\n        marginRight: \"10px\",\n    }\n});\n\n\nconst NavBar = () => {\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(0);\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleChange = (event, newValue) => {\n        setSelectedItem(newValue);\n    };\n    \n    const toggleDrawer = (status) => {\n        setOpen(status);\n    };\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Hidden mdUp>   \n                        <IconButton \n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            className=\"iconMenu\"\n                            onClick={() => toggleDrawer(true)} >\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n\n                    <Hidden mdDown>\n                        <img src={logo} className={classes.img} alt=\"\"/>\n                        <Link to={getRoutePathByName(\"landing\")}>\n                            <Typography variant=\"h6\">Skilled 4</Typography>\n                        </Link>\n                    </Hidden> \n\n                    <Hidden mdUp>   \n                        <Drawer \n                            open={open}\n                            onClose={() => toggleDrawer(false)}\n                        >\n                            <Grid\n                             container\n                             direction=\"row\"\n                             justify=\"center\"\n                             alignItems=\"center\"\n                            >\n                                <img src={logo} className={classes.img} alt=\"\"/>\n                                <Typography variant=\"h6\" className={classes.title}>Skilled 4</Typography>\n                            </Grid>\n                            <Divider variant=\"middle\" className={classes.hr}/>\n\n                            <Tabs \n                                value={selectedItem} \n                                onChange={handleChange}\n                                orientation=\"vertical\"\n                            >\n                                {routes && routes.map((link) => (\n                                    <Tab label={link.name} onClick={() => toggleDrawer(false)}/>\n                                ))}\n                            </Tabs>\n                        </Drawer>\n                    </Hidden>\n\n\n                    <Hidden smDown>\n                        <div className=\"sideLinks\">\n                        <Tabs value={selectedItem} onChange={handleChange}>\n                            { routes && routes.map((link) => (\n                                <Tab label={link.name}/>\n                            ))}\n                        </Tabs>\n                        </div>\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            { history.push(getRoutePathByName(routes[selectedItem].name))}\n        </>\n    );\n}\n \nexport default NavBar;"]},"metadata":{},"sourceType":"module"}