{"ast":null,"code":"var _jsxFileName = \"/Users/charlesvanhamme/Dev/spotline/www/src/components/SwitchLanguage.js\";\nimport React, { useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport { TOGGLE_LANGUAGE } from '../actions/index';\nimport useTranslation from '../translation/useTranslation';\n\nconst SwitchLanguage = () => {\n  const languages = [\"fr\", \"en\"];\n  const methods = useTranslation();\n  const [check, setCheck] = useState(methods.getLang() !== 'en');\n\n  const handleChange = () => {\n    setCheck(!check);\n    methods.toggleLanguage(check ? languages[1] : languages[0]);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, languages[0]), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: check,\n    onChange: handleChange,\n    name: \"checkedA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, languages[1]));\n};\n\nexport default SwitchLanguage;","map":{"version":3,"sources":["/Users/charlesvanhamme/Dev/spotline/www/src/components/SwitchLanguage.js"],"names":["React","useState","Switch","Grid","TOGGLE_LANGUAGE","useTranslation","SwitchLanguage","languages","methods","check","setCheck","getLang","handleChange","toggleLanguage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAEzB,QAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,CAAlB;AACA,QAAMC,OAAO,GAAGH,cAAc,EAA9B;AACA,QAAM,CAACI,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAACO,OAAO,CAACG,OAAR,OAAsB,IAAvB,CAAjC;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvBF,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAD,IAAAA,OAAO,CAACK,cAAR,CAAuBJ,KAAK,GAAGF,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAAvD;AACH,GAHD;;AAKA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,UAAU,EAAC,QAFf;AAGI,IAAA,OAAO,EAAE,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,SAAS,CAAC,CAAD,CAAtB,CALJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEE,KADb;AAEI,IAAA,QAAQ,EAAEG,YAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,eAaI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaL,SAAS,CAAC,CAAD,CAAtB,CAbJ,CADJ;AAiBH,CA5BD;;AA8BA,eAAeD,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport { TOGGLE_LANGUAGE } from '../actions/index';\nimport useTranslation from '../translation/useTranslation';\n\nconst SwitchLanguage = () => {\n\n    const languages = [\"fr\", \"en\"];\n    const methods = useTranslation();\n    const [check,setCheck] = useState(methods.getLang() !== 'en');\n\n    const handleChange = () => {\n        setCheck(!check);\n        methods.toggleLanguage(check ? languages[1] : languages[0]);\n    }\n\n    return (\n        <Grid \n            container \n            alignItems=\"center\"\n            spacing={1}\n        >\n            <Grid item>{ languages[0] }</Grid>\n            <Grid item>\n                <Switch\n                    checked={check}\n                    onChange={handleChange}\n                    name=\"checkedA\"\n                />\n            </Grid>\n            <Grid item>{ languages[1] }</Grid>\n        </Grid>\n    );\n}\n \nexport default SwitchLanguage;"]},"metadata":{},"sourceType":"module"}